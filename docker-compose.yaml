services:
  go-tracer:
    build: ./app
    hostname: localhost
    environment:
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4317
      - OTEL_SERVICE_NAME=test-service
      - OTEL_EXPORTER_OTLP_INSECURE=true
    ports:
      - "9999:9999"
    networks:
      - default

  otel-collector:
    image: otel/opentelemetry-collector
    hostname: localhost
    command: ["--config=/etc/otel-collector-config.yaml"]
    volumes:
      - ./config/otel-collector-config.yaml:/etc/otel-collector-config.yaml
    ports:
      - "4317:4317"
    depends_on:
      kafka:
        condition: service_healthy
    restart: on-failure
    networks:
      - default

  kafka:
    image: confluentinc/cp-kafka
    hostname: localhost
    depends_on:
      - zookeeper
    ports:
      - '29092:29092'
      - '9092:9092'
      - '9101:9101'
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
    healthcheck:
      test: ["CMD", "kafka-topics", "--bootstrap-server", "localhost:9092", "--list"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - default
  
  kafka-ui:
    image: provectuslabs/kafka-ui
    container_name: kafka-ui
    ports:
      - "8080:8080"
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9092
      - AUTH_TYPE=LOGIN_FORM
      - SPRING_SECURITY_USER_NAME=root
      - SPRING_SECURITY_USER_PASSWORD=admin123

  zookeeper:
    image: confluentinc/cp-zookeeper
    hostname: localhost
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
    - 2181:2181
    networks:
      - default

  # quickwit:
  #   image: quickwit/quickwit:latest
  #   hostname: localhost
  #   platform: linux/arm64
  #   command: run --config /quickwit/config/quickwit.yaml
  #   volumes:
  #     - ./config/quickwit.yaml:/quickwit/config/quickwit.yaml
  #     - quickwit_data:/quickwit/data
  #   ports:
  #     - "7280:7280"
  #   environment:
  #     QW_ENABLE_OPENTELEMETRY_OTLP_EXPORTER: "true"
  #     OTEL_EXPORTER_OTLP_ENDPOINT: "http://localhost:7281"
  #   networks:
  #     - default

  quickwit:
    image: quickwit/quickwit:latest
    hostname: localhost
    platform: linux/arm64
    command: >
      run
      --config /quickwit/config/quickwit.yaml
      index create --index-config /quickwit/config/telemetry-index-config.yaml
      index create --index-config /quickwit/config/logs-index-config.yaml
      index create --index-config /quickwit/config/metrics-index-config.yaml
      source create --index telemetry --source-config /quickwit/config/kafka-telemetry-config.yaml
      source create --index logs --source-config /quickwit/config/kafka-logs-config.yaml
      source create --index metrics --source-config /quickwit/config/kafka-metrics-config.yaml
    volumes:
      - ./config/quickwit.yaml:/quickwit/config/quickwit.yaml
      - ./config/telemetry-index-config.yaml:/quickwit/config/telemetry-index-config.yaml
      - ./config/logs-index-config.yaml:/quickwit/config/logs-index-config.yaml
      - ./config/metrics-index-config.yaml:/quickwit/config/metrics-index-config.yaml
      - ./config/source-kafka-telemetry-config.yaml:/quickwit/config/source-kafka-telemetry-config.yaml
      - ./config/source-kafka-logs-config.yaml:/quickwit/config/source-kafka-logs-config.yaml
      - ./config/source-kafka-metrics-config.yaml:/quickwit/config/source-kafka-metrics-config.yaml
      - quickwit_data:/quickwit/data
    ports:
      - "7280:7280"
    environment:
      QW_ENABLE_OPENTELEMETRY_OTLP_EXPORTER: "true"
      OTEL_EXPORTER_OTLP_ENDPOINT: "http://otel-collector:4317"
    networks:
      - default
    depends_on:
      - kafka

  grafana:
    image: grafana/grafana:10.1.5
    volumes:
      - ./config/grafana-datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml
    ports:
      - "3000:3000"
    depends_on:
      - quickwit
    networks:
      - default

networks:
  default:
    name: go-tracer

volumes:
  quickwit_data: